{"version":3,"sources":["images/crop-1.jpg","images/crop-2.jpg","images/crop-3.jpg","images/crop-4.jpg","images/crop-5.jpg","images/crop-6.jpg","images/crop-7.jpg","images/crop-8.jpg","images/crop-9.jpg","images/crop-10.jpg","images/crop-11.jpg","images/crop-12.jpg","images/crop-13.jpg","images/crop-14.jpg","components/Background.js","postprocessing/Pass.js","postprocessing/MaskPass.js","postprocessing/ShaderPass.js","shaders/CopyShader.js","postprocessing/EffectComposer.js","postprocessing/RenderPass.js","shaders/DigitalGlitch.js","postprocessing/GlitchPass.js","components/Effects.js","data.js","components/Image.js","components/Images.js","components/Stars.js","components/Text.js","components/Ocean.js","index.js"],"names":["module","exports","__webpack_require__","p","Background","_ref","color","viewport","useThree","react_default","a","createElement","scale","width","height","attach","args","three","meshBasicMaterial","depthTest","Pass","this","enabled","needsSwap","clear","renderToScreen","Object","assign","prototype","setSize","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","MaskPass","scene","camera","call","inverse","create","constructor","writeValue","clearValue","context","state","buffers","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","ShaderPass","shader","textureID","undefined","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","vertexShader","fragmentShader","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","value","texture","CopyShader","tDiffuse","opacity","join","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getDrawingBufferSize","Vector2","WebGLRenderTarget","name","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","i","currentRenderTarget","getRenderTarget","il","length","stencilFunc","NOTEQUAL","reset","dispose","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","DigitalGlitch","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","GlitchPass","dt_size","generateHeightmap","factor","Math","max","random","_Math","randFloat","PI","data_arr","Float32Array","val","DataTexture","RGBFormat","FloatType","needsUpdate","applySpring","applyThree","Effects","React","memo","_useThree","gl","composer","useRef","useEffect","current","useRender","ref","attachArray","glitchPass","data","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","Image","url","props","objectWithoutProperties","useMemo","THREE","load","_useState","useState","_useState2","slicedToArray","hovered","setHover","hover","useCallback","unhover","useSpring","mesh","onHover","onUnhover","interpolate","f","meshLambertMaterial","transparent","object","Images","top","mouse","scrollMax","map","_ref2","_ref3","x","y","z","components_Image","key","position","Stars","group","theta","r","sin","degToRad","s","cos","rotation","set","_useMemo","Array","fill","_useMemo2","geo","mat","coords","p1","p2","p3","geometry","Text","children","_ref$color","_ref$fontSize","fontSize","_useThree$size","_useThree$viewport","viewportWidth","viewportHeight","canvas","document","getContext","font","concat","textAlign","textBaseline","fillStyle","fillText","sprite","spriteMaterial","image","premultiplyAlpha","onUpdate","_defaultOptions","default","min","density","amplitude","amplitudeVariance","speed","speedVariance","type","Ocean","defaultOptions","arguments","groupRef","meshRef","waves","mergeVertices","v","l","vertices","ang","amp","shading","useFrame","dt","vprops","verts","verticesNeedUpdate","Fragment","spotLight","intensity","components_Effects","components_Ocean","components_Background","components_Stars","components_Images","components_Text","Main","_useSpring","_useSpring2","_useSpring2$","onMouseMove","clientX","clientY","window","innerWidth","innerHeight","onScroll","e","target","scrollTop","web","className","style","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1ccf6e3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crop-1.eff8d384.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-2.ca240704.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-3.d5391c64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-4.743d7512.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-5.957a8440.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-6.55592ea0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-7.51bd8861.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-8.82173777.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-9.832e11e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-10.1033d7e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-11.6e4bd970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-12.834ea713.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-13.ea8e51fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crop-14.411aa813.jpg\";","import React from 'react'\n//import * as THREE from 'three/src/Three'\nimport { useThree } from 'react-three-fiber'\nimport { a } from 'react-spring/three'\n/** This component creates a fullscreen colored plane */\nfunction Background({ color }) {\n  const { viewport } = useThree()\n  return (\n    <mesh scale={[viewport.width, viewport.height, 1]}>\n      <planeGeometry attach=\"geometry\" args={[1, 1]} />\n      <a.meshBasicMaterial attach=\"material\" color={color} depthTest={false} />\n    </mesh>\n  )\n}\n\nexport default Background\n","var Pass = function() {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true\n\n  // if set to true, the pass indicates to swap read and write buffer after rendering\n  this.needsSwap = true\n\n  // if set to true, the pass clears its buffer before rendering\n  this.clear = false\n\n  // if set to true, the result of the pass is rendered to screen\n  this.renderToScreen = false\n}\n\nObject.assign(Pass.prototype, {\n  setSize: function(width, height) {},\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.')\n  },\n})\n\nexport { Pass }","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar MaskPass = function(scene, camera) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.clear = true\n  this.needsSwap = false\n\n  this.inverse = false\n}\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var context = renderer.context\n    var state = renderer.state\n\n    // don't update color or depth\n\n    state.buffers.color.setMask(false)\n    state.buffers.depth.setMask(false)\n\n    // lock buffers\n\n    state.buffers.color.setLocked(true)\n    state.buffers.depth.setLocked(true)\n\n    // set up stencil\n\n    var writeValue, clearValue\n\n    if (this.inverse) {\n      writeValue = 0\n      clearValue = 1\n    } else {\n      writeValue = 1\n      clearValue = 0\n    }\n\n    state.buffers.stencil.setTest(true)\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE)\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff)\n    state.buffers.stencil.setClear(clearValue)\n\n    // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    renderer.setRenderTarget(writeBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false)\n    state.buffers.depth.setLocked(false)\n\n    // only render where stencil is set to 1\n\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff) // draw if == 1\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP)\n  },\n})\n\nvar ClearMaskPass = function() {\n  Pass.call(this)\n\n  this.needsSwap = false\n}\n\nClearMaskPass.prototype = Object.create(Pass.prototype)\n\nObject.assign(ClearMaskPass.prototype, {\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    renderer.state.buffers.stencil.setTest(false)\n  },\n})\n\nexport { ClearMaskPass, MaskPass }\n","import { Mesh, OrthographicCamera, PlaneBufferGeometry, Scene, ShaderMaterial, UniformsUtils } from 'three/src/Three'\nimport { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar ShaderPass = function(shader, textureID) {\n  Pass.call(this)\n\n  this.textureID = textureID !== undefined ? textureID : 'tDiffuse'\n\n  if (shader instanceof ShaderMaterial) {\n    this.uniforms = shader.uniforms\n\n    this.material = shader\n  } else if (shader) {\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      defines: Object.assign({}, shader.defines),\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    })\n  }\n\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n}\n\nShaderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: ShaderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    this.quad.material = this.material\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n})\n\nexport { ShaderPass }\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n    'void main() {',\n    'vUv = uv;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float opacity;',\n    'uniform sampler2D tDiffuse;',\n    'varying vec2 vUv;',\n    'void main() {',\n    'vec4 texel = texture2D( tDiffuse, vUv );',\n    'gl_FragColor = opacity * texel;',\n    '}',\n  ].join('\\n'),\n}\n\nexport { CopyShader }\n","import { ClearMaskPass, MaskPass } from './MaskPass.js'\nimport { ShaderPass } from './ShaderPass.js'\nimport { CopyShader } from '../shaders/CopyShader.js'\nimport { LinearFilter, RGBAFormat, Vector2, WebGLRenderTarget } from 'three/src/Three'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar EffectComposer = function(renderer, renderTarget) {\n  this.renderer = renderer\n\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      stencilBuffer: false,\n    }\n\n    var size = renderer.getDrawingBufferSize(new Vector2())\n    renderTarget = new WebGLRenderTarget(size.width, size.height, parameters)\n    renderTarget.texture.name = 'EffectComposer.rt1'\n  }\n\n  this.renderTarget1 = renderTarget\n  this.renderTarget2 = renderTarget.clone()\n  this.renderTarget2.texture.name = 'EffectComposer.rt2'\n  this.writeBuffer = this.renderTarget1\n  this.readBuffer = this.renderTarget2\n  this.passes = []\n\n  // dependencies\n  if (CopyShader === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.CopyShader')\n  }\n  if (ShaderPass === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.ShaderPass')\n  }\n  this.copyPass = new ShaderPass(CopyShader)\n  this._previousFrameTime = Date.now()\n}\n\nObject.assign(EffectComposer.prototype, {\n  swapBuffers: function() {\n    var tmp = this.readBuffer\n    this.readBuffer = this.writeBuffer\n    this.writeBuffer = tmp\n  },\n\n  addPass: function(pass) {\n    this.passes.push(pass)\n    var size = this.renderer.getDrawingBufferSize(new Vector2())\n    pass.setSize(size.width, size.height)\n  },\n\n  insertPass: function(pass, index) {\n    this.passes.splice(index, 0, pass)\n  },\n\n  render: function(deltaTime) {\n    // deltaTime value is in seconds\n    if (deltaTime === undefined) {\n      deltaTime = (Date.now() - this._previousFrameTime) * 0.001\n    }\n    this._previousFrameTime = Date.now()\n    var currentRenderTarget = this.renderer.getRenderTarget()\n    var maskActive = false\n    var pass,\n      i,\n      il = this.passes.length\n\n    for (i = 0; i < il; i++) {\n      pass = this.passes[i]\n      if (pass.enabled === false) continue\n\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive)\n      if (pass.needsSwap) {\n        if (maskActive) {\n          var context = this.renderer.context\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff)\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime)\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff)\n        }\n        this.swapBuffers()\n      }\n      if (MaskPass !== undefined) {\n        if (pass instanceof MaskPass) {\n          maskActive = true\n        } else if (pass instanceof ClearMaskPass) {\n          maskActive = false\n        }\n      }\n    }\n    this.renderer.setRenderTarget(currentRenderTarget)\n  },\n\n  reset: function(renderTarget) {\n    if (renderTarget === undefined) {\n      var size = this.renderer.getDrawingBufferSize(new Vector2())\n      renderTarget = this.renderTarget1.clone()\n      renderTarget.setSize(size.width, size.height)\n    }\n    this.renderTarget1.dispose()\n    this.renderTarget2.dispose()\n    this.renderTarget1 = renderTarget\n    this.renderTarget2 = renderTarget.clone()\n    this.writeBuffer = this.renderTarget1\n    this.readBuffer = this.renderTarget2\n  },\n  setSize: function(width, height) {\n    this.renderTarget1.setSize(width, height)\n    this.renderTarget2.setSize(width, height)\n    for (var i = 0; i < this.passes.length; i++) {\n      this.passes[i].setSize(width, height)\n    }\n  },\n})\n\nexport { EffectComposer }\n","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.overrideMaterial = overrideMaterial\n\n  this.clearColor = clearColor\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0\n\n  this.clear = true\n  this.clearDepth = false\n  this.needsSwap = false\n}\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.scene.overrideMaterial = this.overrideMaterial\n\n    var oldClearColor, oldClearAlpha\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex()\n      oldClearAlpha = renderer.getClearAlpha()\n\n      renderer.setClearColor(this.clearColor, this.clearAlpha)\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth()\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil)\n    renderer.render(this.scene, this.camera)\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha)\n    }\n\n    this.scene.overrideMaterial = null\n    renderer.autoClear = oldAutoClear\n  },\n})\n\nexport { RenderPass }\n","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n    'void main() {',\n    'vUv = uv;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform int byp;', //should we apply the glitch ?\n    'uniform sampler2D tDiffuse;',\n    'uniform sampler2D tDisp;',\n    'uniform float amount;',\n    'uniform float angle;',\n    'uniform float seed;',\n    'uniform float seed_x;',\n    'uniform float seed_y;',\n    'uniform float distortion_x;',\n    'uniform float distortion_y;',\n    'uniform float col_s;',\n    'varying vec2 vUv;',\n    'float rand(vec2 co){',\n    'return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);',\n    '}',\n    'void main() {',\n    'if(byp<1) {',\n    'vec2 p = vUv;',\n    'float xs = floor(gl_FragCoord.x / 0.5);',\n    'float ys = floor(gl_FragCoord.y / 0.5);',\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n    'vec4 normal = texture2D (tDisp, p*seed*seed);',\n    'if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {',\n    'if(seed_x>0.){',\n    'p.y = 1. - (p.y + distortion_y);',\n    '}',\n    'else {',\n    'p.y = distortion_y;',\n    '}',\n    '}',\n    'if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {',\n    'if(seed_y>0.){',\n    'p.x=distortion_x;',\n    '}',\n    'else {',\n    'p.x = 1. - (p.x + distortion_x);',\n    '}',\n    '}',\n    'p.x+=normal.x*seed_x*(seed/5.);',\n    'p.y+=normal.y*seed_y*(seed/5.);',\n    //base from RGB shift shader\n    'vec2 offset = amount * vec2( cos(angle), sin(angle));',\n    'vec4 cr = texture2D(tDiffuse, p + offset);',\n    'vec4 cga = texture2D(tDiffuse, p);',\n    'vec4 cb = texture2D(tDiffuse, p - offset);',\n    'gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);',\n    //add noise\n    'vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);',\n    'gl_FragColor = gl_FragColor+ snow;',\n    '}',\n    'else {',\n    'gl_FragColor=texture2D (tDiffuse, vUv);',\n    '}',\n    '}',\n  ].join('\\n'),\n}\n\nexport { DigitalGlitch }\n","import {\n  DataTexture,\n  FloatType,\n  Math as _Math,\n  Mesh,\n  OrthographicCamera,\n  PlaneBufferGeometry,\n  RGBFormat,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three/src/Three'\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js'\nimport { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar GlitchPass = function(dt_size) {\n  Pass.call(this)\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch')\n  var shader = DigitalGlitch\n  this.uniforms = UniformsUtils.clone(shader.uniforms)\n  if (dt_size === undefined) dt_size = 64\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size)\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n  })\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n  this.factor = 0\n}\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor)\n    this.uniforms['tDiffuse'].value = readBuffer.texture\n    this.uniforms['seed'].value = Math.random() * factor //default seeding\n    this.uniforms['byp'].value = 0\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor\n    } else this.uniforms['byp'].value = 1\n    this.quad.material = this.material\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n\n  generateHeightmap: function(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3)\n    var length = dt_size * dt_size\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1)\n      data_arr[i * 3 + 0] = val\n      data_arr[i * 3 + 1] = val\n      data_arr[i * 3 + 2] = val\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType)\n    texture.needsUpdate = true\n    return texture\n  },\n})\n\nexport { GlitchPass }\n","import React, { useRef, useEffect } from 'react'\nimport {  extend as applyThree, useThree, useRender } from 'react-three-fiber'\n// A React animation lib, see: https://github.com/react-spring/react-spring\nimport { apply as applySpring, a } from 'react-spring/three'\n// Import and register postprocessing classes as three-native-elements for both react-three-fiber & react-spring\n// They'll be available as native elements <effectComposer /> from then on ...\nimport { EffectComposer } from '../postprocessing/EffectComposer'\nimport { RenderPass } from '../postprocessing/RenderPass'\nimport { GlitchPass } from '../postprocessing/GlitchPass'\n\napplySpring({ EffectComposer, RenderPass, GlitchPass })\napplyThree({ EffectComposer, RenderPass, GlitchPass })\n\n/** This component creates a glitch effect */\nconst Effects = React.memo(({ factor }) => {\n  const { gl, scene, camera, size } = useThree()\n  const composer = useRef()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  // This takes over as the main render-loop (when 2nd arg is set to true)\n  useRender(() => composer.current.render(), true)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" args={[scene, camera]} />\n      <a.glitchPass attachArray=\"passes\" renderToScreen factor={factor} />\n    </effectComposer>\n  )\n})\n\nexport default Effects\n","import img1 from './images/crop-1.jpg'\nimport img2 from './images/crop-2.jpg'\nimport img3 from './images/crop-3.jpg'\nimport img4 from './images/crop-4.jpg'\nimport img5 from './images/crop-5.jpg'\nimport img6 from './images/crop-6.jpg'\nimport img7 from './images/crop-7.jpg'\nimport img8 from './images/crop-8.jpg'\nimport img9 from './images/crop-9.jpg'\nimport img10 from './images/crop-10.jpg'\nimport img11 from './images/crop-11.jpg'\nimport img12 from './images/crop-12.jpg'\nimport img13 from './images/crop-13.jpg'\nimport img14 from './images/crop-14.jpg'\n\nexport default [\n  [img1, -0.5585486420134362, -3.9373147490685803, 5, 0, 0.75],\n  [img2, 1.2658082998471168, -11.546249109522778, 10, 0.25, 0.725],\n  [img3, -1.9467783978748945, -14.812371431221711, 15, 0.25, 0.7],\n  [img4, 2.99601069694845874, -4.10862465704651, 20, 0.75, 0.675],\n  [img5, -1.8993567183341669, -14.813132752114951, 25, 1, 0.65],\n  [img6, 1.8375452075389486, -12.13103791856008, 30, 1, 0.625],\n  [img7, -1.8776788044001291, -12.032336156141714, 35, 1.5, 0.6],\n  [img8, 1.0749348594509635, -11.031316605440301, 40, 1.75, 0.575],\n  [img9, -2.4000439407834233, -13.164578222990698, 45, 2, 0.55],\n  [img10, -2.7065939344543151, -8.871286874370471, 40, 1.25, 0.525],\n  [img11, 0.3849091162266927, -20.0874592327078005, 30, 1.25, 0.5],\n  [img12, -2.566920223782157, -7.577466274058035, 16, 1.75, 0.475],\n  [img13, 1.472727466653086, -16.016837845215539, 20, 1.5, 0.45],\n  [img14, 1.5343322678763767, -16.235258169213427, 30, 2, 0.425]\n]\n","import React, { useMemo, useState, useCallback } from 'react'\nimport * as THREE from 'three/src/Three'\nimport { useSpring, a } from 'react-spring/three'\n/** This component loads an image and projects it onto a plane */\nfunction Image({ url, opacity, scale, ...props }) {\n  const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n  const [hovered, setHover] = useState(false)\n  const hover = useCallback(() => setHover(true), [])\n  const unhover = useCallback(() => setHover(false), [])\n  const { factor } = useSpring({ factor: hovered ? 1.1 : 1 })\n  return (\n    <a.mesh {...props} onHover={hover} onUnhover={unhover} scale={factor.interpolate(f => [scale * f, scale * f, 1])}>\n      <planeBufferGeometry attach=\"geometry\" args={[5, 5]} />\n      <a.meshLambertMaterial attach=\"material\" transparent opacity={opacity}>\n        <primitive attach=\"map\" object={texture} />\n      </a.meshLambertMaterial>\n    </a.mesh>\n  )\n}\n\nexport default Image\n","import React from 'react'\nimport data from '../data'\nimport Image from './Image'\nimport { interpolate } from 'react-spring/three'\n/** This component creates a bunch of parallaxed images */\nfunction Images({ top, mouse, scrollMax }) {\n  return data.map(([url, x, y, factor, z, scale], index) => (\n    <Image\n      key={index}\n      url={url}\n      scale={scale}\n      opacity={top.interpolate([0, 500], [0, 1])}\n      position={interpolate([top, mouse], (top, mouse) => [\n        (-mouse[0] * factor) / 50000 + x,\n        (mouse[1] * factor) / 50000 + y * 1.15 + ((top * factor) / scrollMax) * 2,\n        z + top / 2000\n      ])}\n    />\n  ))\n}\n\nexport default Images\n","import React, { useRef, useMemo } from 'react'\nimport { useRender } from 'react-three-fiber'\nimport * as THREE from 'three/src/Three'\nimport { a } from 'react-spring/three'\nfunction Stars({ position }) {\n  let group = useRef()\n  let theta = 0\n  useRender(() => {\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n    const s = Math.cos(THREE.Math.degToRad(theta * 2))\n    group.current.rotation.set(r, r, r)\n    group.current.scale.set(s, s, s)\n  })\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color(0xd9f5ff), transparent: true })\n    const coords = new Array(1000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, coords]\n  }, [])\n  return (\n    <a.group ref={group} position={position}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </a.group>\n  )\n}\n\nexport default Stars\n","import React, { useMemo } from 'react'\nimport { useThree } from 'react-three-fiber'\nimport { a } from 'react-spring/three'\n/** This renders text via canvas and projects it as a sprite */\nfunction Text({ children, position, opacity, color = 'white', fontSize = 410 }) {\n  const {\n    size: { width, height },\n    viewport: { width: viewportWidth, height: viewportHeight }\n  } = useThree()\n  const scale = viewportWidth > viewportHeight ? viewportWidth : viewportHeight\n  const canvas = useMemo(() => {\n    const canvas = document.createElement('canvas')\n    canvas.width = canvas.height = 2048\n    const context = canvas.getContext('2d')\n    context.font = `bold ${fontSize}px -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif`\n    context.textAlign = 'center'\n    context.textBaseline = 'middle'\n    context.fillStyle = color\n    context.fillText(children, 1024, 1024 - 410 / 2)\n    return canvas\n  }, [children, width, height, color, fontSize])\n  return (\n    <a.sprite scale={[scale, scale, 1]} position={position}>\n      <a.spriteMaterial attach=\"material\" transparent opacity={opacity}>\n        <canvasTexture attach=\"map\" image={canvas} premultiplyAlpha onUpdate={s => (s.needsUpdate = true)} />\n      </a.spriteMaterial>\n    </a.sprite>\n  )\n}\n\nexport default Text\n","import React, { useRef, useMemo, useEffect } from 'react'\nimport { useRender, useFrame } from 'react-three-fiber'\nimport * as THREE from 'three/src/Three'\nimport { a } from 'react-spring/three'\n\nconst _defaultOptions = {\n  width: { default: 10, min: 0 },\n  depth: { default: 10, min: 0 },\n\n  // Density of waves.\n  density: { default: 10 },\n\n  // Wave amplitude and variance.\n  amplitude: { default: 0.1 },\n  amplitudeVariance: { default: 0.3 },\n\n  // Wave speed and variance.\n  speed: { default: 1 },\n  speedVariance: { default: 2 },\n\n  // Material.\n  color: { default: '#7AD2F7', type: 'color' },\n  opacity: { default: 0.8 }\n}\n\nfunction Ocean(defaultOptions = _defaultOptions) {\n  const { width, depth, density, amplitude, amplitudeVariance, speed, speedVariance, color, opacity } = defaultOptions\n  let groupRef = useRef()\n  let meshRef = useRef()\n  let theta = 0\n  let waves = []\n\n  useEffect(() => {\n    let material = meshRef.current.material\n\n    const geometry = new THREE.PlaneGeometry(width, depth, density, density)\n    geometry.mergeVertices()\n\n    for (let v, i = 0, l = geometry.vertices.length; i < l; i++) {\n      v = geometry.vertices[i]\n      waves.push({\n        z: v.z,\n        ang: Math.random() * Math.PI * 2,\n        amp: amplitude + Math.random() * amplitudeVariance,\n        speed: (speed + Math.random() * speedVariance) / 1000 // radians / frame\n      })\n    }\n\n    if (!material) {\n      material = {}\n      material.material = new THREE.MeshPhongMaterial({\n        color: color,\n        transparent: opacity < 1,\n        opacity: opacity,\n        shading: THREE.FlatShading\n      })\n    }\n\n    meshRef.current = new THREE.Mesh(geometry, material.material)\n  })\n\n  useRender(() => {\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n    const s = Math.cos(THREE.Math.degToRad(theta * 2))\n    groupRef.current.rotation.set(r, r, r)\n    groupRef.current.scale.set(s, s, s)\n  })\n  const [geo, mat] = useMemo(() => {\n    //const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n    //const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color(0xd9f5ff), transparent: true })\n    // const coords = new Array(1000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat]\n  }, [])\n\n  useFrame((value, dt) => {\n    if (!dt) return\n\n    const verts = meshRef.current.geometry.vertices\n    let v, vprops\n    for (let i = 0; (v = verts[i]); i++) {\n      vprops = waves[i]\n      v.z = vprops.z + Math.sin(vprops.ang) * vprops.amp\n      vprops.ang += vprops.speed * dt\n    }\n    meshRef.current.geometry.verticesNeedUpdate = true\n    return\n  })\n\n  return (\n    <a.group ref={groupRef} position={[0, 0, 0]}>\n      <mesh ref={meshRef} geometry={geo} material={mat} position={[0, 0, 0]} />\n    </a.group>\n  )\n}\n\nexport default Ocean\n","import ReactDOM from 'react-dom'\nimport React, { useCallback } from 'react'\n// A THREE.js React renderer, see: https://github.com/drcmda/react-three-fiber\nimport { Canvas, useThree } from 'react-three-fiber'\n// A React animation lib, see: https://github.com/react-spring/react-spring\nimport { useSpring, a } from 'react-spring/three'\nimport './styles.css'\n\nimport Background from './components/Background'\nimport Effects from './components/Effects'\nimport Images from './components/Images'\nimport Stars from './components/Stars'\nimport Text from './components/Text'\nimport Ocean from './components/Ocean'\n\n/** This component maintains the scene */\nfunction Scene({ top, mouse }) {\n  const { size } = useThree()\n  const scrollMax = size.height * 4.5\n  return (\n    <>\n      <a.spotLight intensity={1.2} color=\"white\" position={mouse.interpolate((x, y) => [x / 100, -y / 100, 6.5])} />\n      <Effects factor={top.interpolate([0, 150], [1, 0])} />\n      <Ocean />\n      <Background color={top.interpolate([0, scrollMax * 0.25, scrollMax * 0.8, scrollMax], ['#03040f', '#0d7789', '#00bfff', '#00bfff'])} />\n      <Stars position={top.interpolate(top => [0, -1 + top / 20, 0])} />\n      <Images top={top} mouse={mouse} scrollMax={scrollMax} />\n      <Text opacity={top.interpolate([0, 200], [1, 0])} position={top.interpolate(top => [0, -1 + top / 200, 0])}>\n        lorem\n      </Text>\n      <Text position={top.interpolate(top => [0, -20 + ((top * 10) / scrollMax) * 2, 0])} color=\"black\" fontSize={150}>\n        Ipsum\n      </Text>\n    </>\n  )\n}\n\n/** Main component */\nexport default function Main() {\n  // This tiny spring right here controlls all(!) the animations, one for scroll, the other for mouse movement ...\n  const [{ top, mouse }, set] = useSpring(() => ({ top: 0, mouse: [0, 0] }))\n  const onMouseMove = useCallback(({ clientX: x, clientY: y }) => set({ mouse: [x - window.innerWidth / 2, y - window.innerHeight / 2] }), [])\n  const onScroll = useCallback(e => set({ top: e.target.scrollTop }), [])\n  return (\n    <>\n      <Canvas className=\"canvas\">\n        <Scene top={top} mouse={mouse} />\n      </Canvas>\n      <div className=\"scroll-container\" onScroll={onScroll} onMouseMove={onMouseMove}>\n        <div style={{ height: '525vh' }} />\n      </div>\n    </>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))\n"],"sourceRoot":""}